<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2015-09-21 10:53:45.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace LarpManager\Entities;

use Doctrine\Common\Collections\ArrayCollection;

/**
 * LarpManager\Entities\Joueur
 *
 * @Entity()
 * @Table(name="joueur", indexes={@Index(name="fk_joueur_gn_gn1_idx", columns={"gn_id"}), @Index(name="fk_joueur_gn_user1_idx", columns={"user_id"})})
 * @InheritanceType("SINGLE_TABLE")
 * @DiscriminatorColumn(name="discr", type="string")
 * @DiscriminatorMap({"base":"BaseJoueur", "extended":"Joueur"})
 */
class BaseJoueur
{
    /**
     * @Id
     * @Column(type="integer")
     * @GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @Column(type="datetime")
     */
    protected $subscription_date;

    /**
     * @Column(type="integer", nullable=true)
     */
    protected $xp;

    /**
     * @OneToMany(targetEntity="ExperienceGain", mappedBy="joueur")
     * @JoinColumn(name="id", referencedColumnName="joueur_id")
     */
    protected $experienceGains;

    /**
     * @OneToMany(targetEntity="ExperienceUsage", mappedBy="joueur")
     * @JoinColumn(name="id", referencedColumnName="joueur_id")
     */
    protected $experienceUsages;

    /**
     * @OneToOne(targetEntity="Personnage", mappedBy="joueur")
     */
    protected $personnage;

    /**
     * @ManyToOne(targetEntity="Gn", inversedBy="joueurs", cascade={"persist"})
     * @JoinColumn(name="gn_id", referencedColumnName="id")
     */
    protected $gn;

    /**
     * @ManyToOne(targetEntity="User", inversedBy="joueurs")
     * @JoinColumn(name="user_id", referencedColumnName="id")
     */
    protected $user;

    /**
     * @ManyToMany(targetEntity="Groupe", inversedBy="joueurs")
     * @JoinTable(name="joueur_groupe",
     *     joinColumns={@JoinColumn(name="joueur_id", referencedColumnName="id")},
     *     inverseJoinColumns={@JoinColumn(name="groupe_id", referencedColumnName="id")}
     * )
     */
    protected $groupes;

    public function __construct()
    {
        $this->experienceGains = new ArrayCollection();
        $this->experienceUsages = new ArrayCollection();
        $this->personnages = new ArrayCollection();
        $this->groupes = new ArrayCollection();
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \LarpManager\Entities\Joueur
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of subscription_date.
     *
     * @param \DateTime $subscription_date
     * @return \LarpManager\Entities\Joueur
     */
    public function setSubscriptionDate($subscription_date)
    {
        $this->subscription_date = $subscription_date;

        return $this;
    }

    /**
     * Get the value of subscription_date.
     *
     * @return \DateTime
     */
    public function getSubscriptionDate()
    {
        return $this->subscription_date;
    }

    /**
     * Set the value of xp.
     *
     * @param integer $xp
     * @return \LarpManager\Entities\Joueur
     */
    public function setXp($xp)
    {
        $this->xp = $xp;

        return $this;
    }

    /**
     * Get the value of xp.
     *
     * @return integer
     */
    public function getXp()
    {
        return $this->xp;
    }

    /**
     * Add ExperienceGain entity to collection (one to many).
     *
     * @param \LarpManager\Entities\ExperienceGain $experienceGain
     * @return \LarpManager\Entities\Joueur
     */
    public function addExperienceGain(ExperienceGain $experienceGain)
    {
        $this->experienceGains[] = $experienceGain;

        return $this;
    }

    /**
     * Remove ExperienceGain entity from collection (one to many).
     *
     * @param \LarpManager\Entities\ExperienceGain $experienceGain
     * @return \LarpManager\Entities\Joueur
     */
    public function removeExperienceGain(ExperienceGain $experienceGain)
    {
        $this->experienceGains->removeElement($experienceGain);

        return $this;
    }

    /**
     * Get ExperienceGain entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getExperienceGains()
    {
        return $this->experienceGains;
    }

    /**
     * Add ExperienceUsage entity to collection (one to many).
     *
     * @param \LarpManager\Entities\ExperienceUsage $experienceUsage
     * @return \LarpManager\Entities\Joueur
     */
    public function addExperienceUsage(ExperienceUsage $experienceUsage)
    {
        $this->experienceUsages[] = $experienceUsage;

        return $this;
    }

    /**
     * Remove ExperienceUsage entity from collection (one to many).
     *
     * @param \LarpManager\Entities\ExperienceUsage $experienceUsage
     * @return \LarpManager\Entities\Joueur
     */
    public function removeExperienceUsage(ExperienceUsage $experienceUsage)
    {
        $this->experienceUsages->removeElement($experienceUsage);

        return $this;
    }

    /**
     * Get ExperienceUsage entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getExperienceUsages()
    {
        return $this->experienceUsages;
    }

    /**
     * Set Personnage entity (one to one).
     *
     * @param \LarpManager\Entities\Personnage $personnage
     * @return \LarpManager\Entities\Joueur
     */
    public function setPersonnage(Personnage $personnage = null)
    {
        $personnage->setJoueur($this);
        $this->personnage = $personnage;

        return $this;
    }

    /**
     * Get Personnage entity (one to one).
     *
     * @return \LarpManager\Entities\Personnage
     */
    public function getPersonnage()
    {
        return $this->personnage;
    }

    /**
     * Set Gn entity (many to one).
     *
     * @param \LarpManager\Entities\Gn $gn
     * @return \LarpManager\Entities\Joueur
     */
    public function setGn(Gn $gn = null)
    {
        $this->gn = $gn;

        return $this;
    }

    /**
     * Get Gn entity (many to one).
     *
     * @return \LarpManager\Entities\Gn
     */
    public function getGn()
    {
        return $this->gn;
    }

    /**
     * Set User entity (many to one).
     *
     * @param \LarpManager\Entities\User $user
     * @return \LarpManager\Entities\Joueur
     */
    public function setUser(User $user = null)
    {
        $this->user = $user;

        return $this;
    }

    /**
     * Get User entity (many to one).
     *
     * @return \LarpManager\Entities\User
     */
    public function getUser()
    {
        return $this->user;
    }

    /**
     * Add Groupe entity to collection.
     *
     * @param \LarpManager\Entities\Groupe $groupe
     * @return \LarpManager\Entities\Joueur
     */
    public function addGroupe(Groupe $groupe)
    {
        $groupe->addJoueur($this);
        $this->groupes[] = $groupe;

        return $this;
    }

    /**
     * Remove Groupe entity from collection.
     *
     * @param \LarpManager\Entities\Groupe $groupe
     * @return \LarpManager\Entities\Joueur
     */
    public function removeGroupe(Groupe $groupe)
    {
        $groupe->removeJoueur($this);
        $this->groupes->removeElement($groupe);

        return $this;
    }

    /**
     * Get Groupe entity collection.
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getGroupes()
    {
        return $this->groupes;
    }

    public function __sleep()
    {
        return array('id', 'gn_id', 'subscription_date', 'user_id', 'xp');
    }
}