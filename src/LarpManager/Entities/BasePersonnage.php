<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2015-07-11 13:24:55.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace LarpManager\Entities;

use Doctrine\Common\Collections\ArrayCollection;

/**
 * LarpManager\Entities\Personnage
 *
 * @Entity()
 * @Table(name="personnage", indexes={@Index(name="fk_personnage_groupe1_idx", columns={"groupe_id"}), @Index(name="fk_personnage_users1_idx", columns={"users_id"}), @Index(name="fk_personnage_archetype1_idx", columns={"archetype_id"}), @Index(name="fk_personnage_age1_idx", columns={"age_id"}), @Index(name="fk_personnage_sexe1_idx", columns={"sexe_id"})})
 * @InheritanceType("SINGLE_TABLE")
 * @DiscriminatorColumn(name="discr", type="string")
 * @DiscriminatorMap({"base":"BasePersonnage", "extended":"Personnage"})
 */
class BasePersonnage
{
    /**
     * @Id
     * @Column(type="integer")
     */
    protected $id;

    /**
     * @Column(type="string", length=100)
     */
    protected $nom;

    /**
     * @Column(type="string", length=100, nullable=true)
     */
    protected $surnom;

    /**
     * @Column(type="boolean", nullable=true)
     */
    protected $intrigue;

    /**
     * @Column(type="integer")
     */
    protected $groupe_id;

    /**
     * @Column(type="integer", options={"unsigned":true})
     */
    protected $users_id;

    /**
     * @Column(type="integer")
     */
    protected $archetype_id;

    /**
     * @Column(type="integer")
     */
    protected $age_id;

    /**
     * @Column(type="integer")
     */
    protected $sexe_id;

    /**
     * @Column(type="integer", nullable=true)
     */
    protected $renomme;

    /**
     * @Column(type="string", length=100, nullable=true)
     */
    protected $photo;

    /**
     * @ManyToOne(targetEntity="Groupe", inversedBy="personnages")
     * @JoinColumn(name="groupe_id", referencedColumnName="id")
     */
    protected $groupe;

    /**
     * @ManyToOne(targetEntity="Users", inversedBy="personnages")
     * @JoinColumn(name="users_id", referencedColumnName="id")
     */
    protected $users;

    /**
     * @ManyToOne(targetEntity="Archetype", inversedBy="personnages")
     * @JoinColumn(name="archetype_id", referencedColumnName="id")
     */
    protected $archetype;

    /**
     * @ManyToOne(targetEntity="Age", inversedBy="personnages")
     * @JoinColumn(name="age_id", referencedColumnName="id")
     */
    protected $age;

    /**
     * @ManyToOne(targetEntity="Sexe", inversedBy="personnages")
     * @JoinColumn(name="sexe_id", referencedColumnName="id")
     */
    protected $sexe;

    /**
     * @ManyToMany(targetEntity="Confrerie", inversedBy="personnages")
     * @JoinTable(name="confrerie_postulant",
     *     joinColumns={@JoinColumn(name="personnage_id", referencedColumnName="id")},
     *     inverseJoinColumns={@JoinColumn(name="confrerie_id", referencedColumnName="id")}
     * )
     */
    protected $confreries;

    /**
     * @ManyToMany(targetEntity="Culte", mappedBy="personnages")
     */
    protected $cultes;

    /**
     * @ManyToMany(targetEntity="Guilde", mappedBy="personnages")
     */
    protected $guildes;

    /**
     * @ManyToMany(targetEntity="Gn", inversedBy="personnages")
     * @JoinTable(name="personnage_gn",
     *     joinColumns={@JoinColumn(name="personnage_id", referencedColumnName="id")},
     *     inverseJoinColumns={@JoinColumn(name="gn_id", referencedColumnName="id")}
     * )
     */
    protected $gns;

    /**
     * @ManyToMany(targetEntity="Langue", inversedBy="personnages")
     * @JoinTable(name="personnage_langue",
     *     joinColumns={@JoinColumn(name="personnage_id", referencedColumnName="id")},
     *     inverseJoinColumns={@JoinColumn(name="langue_id", referencedColumnName="id")}
     * )
     */
    protected $langues;

    public function __construct()
    {
        $this->confreries = new ArrayCollection();
        $this->cultes = new ArrayCollection();
        $this->guildes = new ArrayCollection();
        $this->gns = new ArrayCollection();
        $this->langues = new ArrayCollection();
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \LarpManager\Entities\Personnage
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of nom.
     *
     * @param string $nom
     * @return \LarpManager\Entities\Personnage
     */
    public function setNom($nom)
    {
        $this->nom = $nom;

        return $this;
    }

    /**
     * Get the value of nom.
     *
     * @return string
     */
    public function getNom()
    {
        return $this->nom;
    }

    /**
     * Set the value of surnom.
     *
     * @param string $surnom
     * @return \LarpManager\Entities\Personnage
     */
    public function setSurnom($surnom)
    {
        $this->surnom = $surnom;

        return $this;
    }

    /**
     * Get the value of surnom.
     *
     * @return string
     */
    public function getSurnom()
    {
        return $this->surnom;
    }

    /**
     * Set the value of intrigue.
     *
     * @param boolean $intrigue
     * @return \LarpManager\Entities\Personnage
     */
    public function setIntrigue($intrigue)
    {
        $this->intrigue = $intrigue;

        return $this;
    }

    /**
     * Get the value of intrigue.
     *
     * @return boolean
     */
    public function getIntrigue()
    {
        return $this->intrigue;
    }

    /**
     * Set the value of groupe_id.
     *
     * @param integer $groupe_id
     * @return \LarpManager\Entities\Personnage
     */
    public function setGroupeId($groupe_id)
    {
        $this->groupe_id = $groupe_id;

        return $this;
    }

    /**
     * Get the value of groupe_id.
     *
     * @return integer
     */
    public function getGroupeId()
    {
        return $this->groupe_id;
    }

    /**
     * Set the value of users_id.
     *
     * @param integer $users_id
     * @return \LarpManager\Entities\Personnage
     */
    public function setUsersId($users_id)
    {
        $this->users_id = $users_id;

        return $this;
    }

    /**
     * Get the value of users_id.
     *
     * @return integer
     */
    public function getUsersId()
    {
        return $this->users_id;
    }

    /**
     * Set the value of archetype_id.
     *
     * @param integer $archetype_id
     * @return \LarpManager\Entities\Personnage
     */
    public function setArchetypeId($archetype_id)
    {
        $this->archetype_id = $archetype_id;

        return $this;
    }

    /**
     * Get the value of archetype_id.
     *
     * @return integer
     */
    public function getArchetypeId()
    {
        return $this->archetype_id;
    }

    /**
     * Set the value of age_id.
     *
     * @param integer $age_id
     * @return \LarpManager\Entities\Personnage
     */
    public function setAgeId($age_id)
    {
        $this->age_id = $age_id;

        return $this;
    }

    /**
     * Get the value of age_id.
     *
     * @return integer
     */
    public function getAgeId()
    {
        return $this->age_id;
    }

    /**
     * Set the value of sexe_id.
     *
     * @param integer $sexe_id
     * @return \LarpManager\Entities\Personnage
     */
    public function setSexeId($sexe_id)
    {
        $this->sexe_id = $sexe_id;

        return $this;
    }

    /**
     * Get the value of sexe_id.
     *
     * @return integer
     */
    public function getSexeId()
    {
        return $this->sexe_id;
    }

    /**
     * Set the value of renomme.
     *
     * @param integer $renomme
     * @return \LarpManager\Entities\Personnage
     */
    public function setRenomme($renomme)
    {
        $this->renomme = $renomme;

        return $this;
    }

    /**
     * Get the value of renomme.
     *
     * @return integer
     */
    public function getRenomme()
    {
        return $this->renomme;
    }

    /**
     * Set the value of photo.
     *
     * @param string $photo
     * @return \LarpManager\Entities\Personnage
     */
    public function setPhoto($photo)
    {
        $this->photo = $photo;

        return $this;
    }

    /**
     * Get the value of photo.
     *
     * @return string
     */
    public function getPhoto()
    {
        return $this->photo;
    }

    /**
     * Set Groupe entity (many to one).
     *
     * @param \LarpManager\Entities\Groupe $groupe
     * @return \LarpManager\Entities\Personnage
     */
    public function setGroupe(Groupe $groupe = null)
    {
        $this->groupe = $groupe;

        return $this;
    }

    /**
     * Get Groupe entity (many to one).
     *
     * @return \LarpManager\Entities\Groupe
     */
    public function getGroupe()
    {
        return $this->groupe;
    }

    /**
     * Set Users entity (many to one).
     *
     * @param \LarpManager\Entities\Users $users
     * @return \LarpManager\Entities\Personnage
     */
    public function setUsers(Users $users = null)
    {
        $this->users = $users;

        return $this;
    }

    /**
     * Get Users entity (many to one).
     *
     * @return \LarpManager\Entities\Users
     */
    public function getUsers()
    {
        return $this->users;
    }

    /**
     * Set Archetype entity (many to one).
     *
     * @param \LarpManager\Entities\Archetype $archetype
     * @return \LarpManager\Entities\Personnage
     */
    public function setArchetype(Archetype $archetype = null)
    {
        $this->archetype = $archetype;

        return $this;
    }

    /**
     * Get Archetype entity (many to one).
     *
     * @return \LarpManager\Entities\Archetype
     */
    public function getArchetype()
    {
        return $this->archetype;
    }

    /**
     * Set Age entity (many to one).
     *
     * @param \LarpManager\Entities\Age $age
     * @return \LarpManager\Entities\Personnage
     */
    public function setAge(Age $age = null)
    {
        $this->age = $age;

        return $this;
    }

    /**
     * Get Age entity (many to one).
     *
     * @return \LarpManager\Entities\Age
     */
    public function getAge()
    {
        return $this->age;
    }

    /**
     * Set Sexe entity (many to one).
     *
     * @param \LarpManager\Entities\Sexe $sexe
     * @return \LarpManager\Entities\Personnage
     */
    public function setSexe(Sexe $sexe = null)
    {
        $this->sexe = $sexe;

        return $this;
    }

    /**
     * Get Sexe entity (many to one).
     *
     * @return \LarpManager\Entities\Sexe
     */
    public function getSexe()
    {
        return $this->sexe;
    }

    /**
     * Add Confrerie entity to collection.
     *
     * @param \LarpManager\Entities\Confrerie $confrerie
     * @return \LarpManager\Entities\Personnage
     */
    public function addConfrerie(Confrerie $confrerie)
    {
        $confrerie->addPersonnage($this);
        $this->confreries[] = $confrerie;

        return $this;
    }

    /**
     * Remove Confrerie entity from collection.
     *
     * @param \LarpManager\Entities\Confrerie $confrerie
     * @return \LarpManager\Entities\Personnage
     */
    public function removeConfrerie(Confrerie $confrerie)
    {
        $confrerie->removePersonnage($this);
        $this->confreries->removeElement($confrerie);

        return $this;
    }

    /**
     * Get Confrerie entity collection.
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getConfreries()
    {
        return $this->confreries;
    }

    /**
     * Add Culte entity to collection.
     *
     * @param \LarpManager\Entities\Culte $culte
     * @return \LarpManager\Entities\Personnage
     */
    public function addCulte(Culte $culte)
    {
        $this->cultes[] = $culte;

        return $this;
    }

    /**
     * Remove Culte entity from collection.
     *
     * @param \LarpManager\Entities\Culte $culte
     * @return \LarpManager\Entities\Personnage
     */
    public function removeCulte(Culte $culte)
    {
        $this->cultes->removeElement($culte);

        return $this;
    }

    /**
     * Get Culte entity collection.
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getCultes()
    {
        return $this->cultes;
    }

    /**
     * Add Guilde entity to collection.
     *
     * @param \LarpManager\Entities\Guilde $guilde
     * @return \LarpManager\Entities\Personnage
     */
    public function addGuilde(Guilde $guilde)
    {
        $this->guildes[] = $guilde;

        return $this;
    }

    /**
     * Remove Guilde entity from collection.
     *
     * @param \LarpManager\Entities\Guilde $guilde
     * @return \LarpManager\Entities\Personnage
     */
    public function removeGuilde(Guilde $guilde)
    {
        $this->guildes->removeElement($guilde);

        return $this;
    }

    /**
     * Get Guilde entity collection.
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getGuildes()
    {
        return $this->guildes;
    }

    /**
     * Add Gn entity to collection.
     *
     * @param \LarpManager\Entities\Gn $gn
     * @return \LarpManager\Entities\Personnage
     */
    public function addGn(Gn $gn)
    {
        $gn->addPersonnage($this);
        $this->gns[] = $gn;

        return $this;
    }

    /**
     * Remove Gn entity from collection.
     *
     * @param \LarpManager\Entities\Gn $gn
     * @return \LarpManager\Entities\Personnage
     */
    public function removeGn(Gn $gn)
    {
        $gn->removePersonnage($this);
        $this->gns->removeElement($gn);

        return $this;
    }

    /**
     * Get Gn entity collection.
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getGns()
    {
        return $this->gns;
    }

    /**
     * Add Langue entity to collection.
     *
     * @param \LarpManager\Entities\Langue $langue
     * @return \LarpManager\Entities\Personnage
     */
    public function addLangue(Langue $langue)
    {
        $langue->addPersonnage($this);
        $this->langues[] = $langue;

        return $this;
    }

    /**
     * Remove Langue entity from collection.
     *
     * @param \LarpManager\Entities\Langue $langue
     * @return \LarpManager\Entities\Personnage
     */
    public function removeLangue(Langue $langue)
    {
        $langue->removePersonnage($this);
        $this->langues->removeElement($langue);

        return $this;
    }

    /**
     * Get Langue entity collection.
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getLangues()
    {
        return $this->langues;
    }

    public function __sleep()
    {
        return array('id', 'nom', 'surnom', 'intrigue', 'groupe_id', 'users_id', 'archetype_id', 'age_id', 'sexe_id', 'renomme', 'photo');
    }
}