<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2015-07-01 07:10:35.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace LarpManager\Entities;

use Doctrine\Common\Collections\ArrayCollection;

/**
 * LarpManager\Entities\Personnage
 *
 * @Entity()
 * @Table(name="personnage", indexes={@Index(name="fk_personnage_groupe1_idx", columns={"groupe_id"}), @Index(name="fk_personnage_users1_idx", columns={"users_id"})})
 * @InheritanceType("SINGLE_TABLE")
 * @DiscriminatorColumn(name="discr", type="string")
 * @DiscriminatorMap({"base":"BasePersonnage", "extended":"Personnage"})
 */
class BasePersonnage
{
    /**
     * @Id
     * @Column(type="integer")
     */
    protected $id;

    /**
     * @Column(type="string", length=100)
     */
    protected $nom;

    /**
     * @Column(type="integer", nullable=true)
     */
    protected $age;

    /**
     * @Column(type="integer")
     */
    protected $groupe_id;

    /**
     * @Column(type="integer", options={"unsigned":true})
     */
    protected $users_id;

    /**
     * @ManyToOne(targetEntity="Groupe", inversedBy="personnages")
     * @JoinColumn(name="groupe_id", referencedColumnName="id")
     */
    protected $groupe;

    /**
     * @ManyToOne(targetEntity="Users", inversedBy="personnages")
     * @JoinColumn(name="users_id", referencedColumnName="id")
     */
    protected $users;

    /**
     * @ManyToMany(targetEntity="Gn", inversedBy="personnages")
     * @JoinTable(name="personnage_gn",
     *     joinColumns={@JoinColumn(name="personnage_id", referencedColumnName="id")},
     *     inverseJoinColumns={@JoinColumn(name="gn_id", referencedColumnName="id")}
     * )
     */
    protected $gns;

    public function __construct()
    {
        $this->gns = new ArrayCollection();
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \LarpManager\Entities\Personnage
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of nom.
     *
     * @param string $nom
     * @return \LarpManager\Entities\Personnage
     */
    public function setNom($nom)
    {
        $this->nom = $nom;

        return $this;
    }

    /**
     * Get the value of nom.
     *
     * @return string
     */
    public function getNom()
    {
        return $this->nom;
    }

    /**
     * Set the value of age.
     *
     * @param integer $age
     * @return \LarpManager\Entities\Personnage
     */
    public function setAge($age)
    {
        $this->age = $age;

        return $this;
    }

    /**
     * Get the value of age.
     *
     * @return integer
     */
    public function getAge()
    {
        return $this->age;
    }

    /**
     * Set the value of groupe_id.
     *
     * @param integer $groupe_id
     * @return \LarpManager\Entities\Personnage
     */
    public function setGroupeId($groupe_id)
    {
        $this->groupe_id = $groupe_id;

        return $this;
    }

    /**
     * Get the value of groupe_id.
     *
     * @return integer
     */
    public function getGroupeId()
    {
        return $this->groupe_id;
    }

    /**
     * Set the value of users_id.
     *
     * @param integer $users_id
     * @return \LarpManager\Entities\Personnage
     */
    public function setUsersId($users_id)
    {
        $this->users_id = $users_id;

        return $this;
    }

    /**
     * Get the value of users_id.
     *
     * @return integer
     */
    public function getUsersId()
    {
        return $this->users_id;
    }

    /**
     * Set Groupe entity (many to one).
     *
     * @param \LarpManager\Entities\Groupe $groupe
     * @return \LarpManager\Entities\Personnage
     */
    public function setGroupe(Groupe $groupe = null)
    {
        $this->groupe = $groupe;

        return $this;
    }

    /**
     * Get Groupe entity (many to one).
     *
     * @return \LarpManager\Entities\Groupe
     */
    public function getGroupe()
    {
        return $this->groupe;
    }

    /**
     * Set Users entity (many to one).
     *
     * @param \LarpManager\Entities\Users $users
     * @return \LarpManager\Entities\Personnage
     */
    public function setUsers(Users $users = null)
    {
        $this->users = $users;

        return $this;
    }

    /**
     * Get Users entity (many to one).
     *
     * @return \LarpManager\Entities\Users
     */
    public function getUsers()
    {
        return $this->users;
    }

    /**
     * Add Gn entity to collection.
     *
     * @param \LarpManager\Entities\Gn $gn
     * @return \LarpManager\Entities\Personnage
     */
    public function addGn(Gn $gn)
    {
        $gn->addPersonnage($this);
        $this->gns[] = $gn;

        return $this;
    }

    /**
     * Remove Gn entity from collection.
     *
     * @param \LarpManager\Entities\Gn $gn
     * @return \LarpManager\Entities\Personnage
     */
    public function removeGn(Gn $gn)
    {
        $gn->removePersonnage($this);
        $this->gns->removeElement($gn);

        return $this;
    }

    /**
     * Get Gn entity collection.
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getGns()
    {
        return $this->gns;
    }

    public function __sleep()
    {
        return array('id', 'nom', 'age', 'groupe_id', 'users_id');
    }
}