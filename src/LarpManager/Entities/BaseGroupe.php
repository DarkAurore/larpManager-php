<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2015-08-15 15:56:46.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace LarpManager\Entities;

use Doctrine\Common\Collections\ArrayCollection;

/**
 * LarpManager\Entities\Groupe
 *
 * @Entity()
 * @Table(name="groupe", indexes={@Index(name="fk_groupe_users1_idx", columns={"responsable_id"})})
 * @InheritanceType("SINGLE_TABLE")
 * @DiscriminatorColumn(name="discr", type="string")
 * @DiscriminatorMap({"base":"BaseGroupe", "extended":"Groupe"})
 */
class BaseGroupe
{
    /**
     * @Id
     * @Column(type="integer")
     * @GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @Column(type="string", length=100, nullable=true)
     */
    protected $nom;

    /**
     * @Column(type="string", length=450, nullable=true)
     */
    protected $description;

    /**
     * @Column(type="string", length=10, nullable=true)
     */
    protected $code;

    /**
     * @Column(type="datetime", nullable=true)
     */
    protected $creation_date;

    /**
     * @Column(type="datetime", nullable=true)
     */
    protected $update_date;

    /**
     * @Column(type="boolean", nullable=true)
     */
    protected $jeu_maritime;

    /**
     * @Column(type="boolean", nullable=true)
     */
    protected $jeu_strategique;

    /**
     * @OneToMany(targetEntity="Personnage", mappedBy="groupe")
     * @JoinColumn(name="id", referencedColumnName="groupe_id")
     */
    protected $personnages;

    /**
     * @ManyToOne(targetEntity="User", inversedBy="groupes")
     * @JoinColumn(name="responsable_id", referencedColumnName="id", nullable=true)
     */
    protected $user;

    /**
     * @ManyToMany(targetEntity="Classe", inversedBy="groupes")
     * @JoinTable(name="groupe_archetype",
     *     joinColumns={@JoinColumn(name="groupe_id", referencedColumnName="id")},
     *     inverseJoinColumns={@JoinColumn(name="archetype_id", referencedColumnName="id")}
     * )
     */
    protected $classes;

    public function __construct()
    {
        $this->personnages = new ArrayCollection();
        $this->classes = new ArrayCollection();
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \LarpManager\Entities\Groupe
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of nom.
     *
     * @param string $nom
     * @return \LarpManager\Entities\Groupe
     */
    public function setNom($nom)
    {
        $this->nom = $nom;

        return $this;
    }

    /**
     * Get the value of nom.
     *
     * @return string
     */
    public function getNom()
    {
        return $this->nom;
    }

    /**
     * Set the value of description.
     *
     * @param string $description
     * @return \LarpManager\Entities\Groupe
     */
    public function setDescription($description)
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Get the value of description.
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Set the value of code.
     *
     * @param string $code
     * @return \LarpManager\Entities\Groupe
     */
    public function setCode($code)
    {
        $this->code = $code;

        return $this;
    }

    /**
     * Get the value of code.
     *
     * @return string
     */
    public function getCode()
    {
        return $this->code;
    }

    /**
     * Set the value of creation_date.
     *
     * @param \DateTime $creation_date
     * @return \LarpManager\Entities\Groupe
     */
    public function setCreationDate($creation_date)
    {
        $this->creation_date = $creation_date;

        return $this;
    }

    /**
     * Get the value of creation_date.
     *
     * @return \DateTime
     */
    public function getCreationDate()
    {
        return $this->creation_date;
    }

    /**
     * Set the value of update_date.
     *
     * @param \DateTime $update_date
     * @return \LarpManager\Entities\Groupe
     */
    public function setUpdateDate($update_date)
    {
        $this->update_date = $update_date;

        return $this;
    }

    /**
     * Get the value of update_date.
     *
     * @return \DateTime
     */
    public function getUpdateDate()
    {
        return $this->update_date;
    }

    /**
     * Set the value of jeu_maritime.
     *
     * @param boolean $jeu_maritime
     * @return \LarpManager\Entities\Groupe
     */
    public function setJeuMaritime($jeu_maritime)
    {
        $this->jeu_maritime = $jeu_maritime;

        return $this;
    }

    /**
     * Get the value of jeu_maritime.
     *
     * @return boolean
     */
    public function getJeuMaritime()
    {
        return $this->jeu_maritime;
    }

    /**
     * Set the value of jeu_strategique.
     *
     * @param boolean $jeu_strategique
     * @return \LarpManager\Entities\Groupe
     */
    public function setJeuStrategique($jeu_strategique)
    {
        $this->jeu_strategique = $jeu_strategique;

        return $this;
    }

    /**
     * Get the value of jeu_strategique.
     *
     * @return boolean
     */
    public function getJeuStrategique()
    {
        return $this->jeu_strategique;
    }

    /**
     * Add Personnage entity to collection (one to many).
     *
     * @param \LarpManager\Entities\Personnage $personnage
     * @return \LarpManager\Entities\Groupe
     */
    public function addPersonnage(Personnage $personnage)
    {
        $this->personnages[] = $personnage;

        return $this;
    }

    /**
     * Remove Personnage entity from collection (one to many).
     *
     * @param \LarpManager\Entities\Personnage $personnage
     * @return \LarpManager\Entities\Groupe
     */
    public function removePersonnage(Personnage $personnage)
    {
        $this->personnages->removeElement($personnage);

        return $this;
    }

    /**
     * Get Personnage entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getPersonnages()
    {
        return $this->personnages;
    }

    /**
     * Set User entity (many to one).
     *
     * @param \LarpManager\Entities\User $user
     * @return \LarpManager\Entities\Groupe
     */
    public function setUser(User $user = null)
    {
        $this->user = $user;

        return $this;
    }

    /**
     * Get User entity (many to one).
     *
     * @return \LarpManager\Entities\User
     */
    public function getUser()
    {
        return $this->user;
    }

    /**
     * Add Classe entity to collection.
     *
     * @param \LarpManager\Entities\Classe $classe
     * @return \LarpManager\Entities\Groupe
     */
    public function addClasse(Classe $classe)
    {
        $classe->addGroupe($this);
        $this->classes[] = $classe;

        return $this;
    }

    /**
     * Remove Classe entity from collection.
     *
     * @param \LarpManager\Entities\Classe $classe
     * @return \LarpManager\Entities\Groupe
     */
    public function removeClasse(Classe $classe)
    {
        $classe->removeGroupe($this);
        $this->classes->removeElement($classe);

        return $this;
    }

    /**
     * Get Classe entity collection.
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getClasses()
    {
        return $this->classes;
    }

    public function __sleep()
    {
        return array('id', 'nom', 'description', 'code', 'creation_date', 'update_date', 'jeu_maritime', 'jeu_strategique', 'responsable_id');
    }
}