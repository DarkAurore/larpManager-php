<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2015-08-15 13:14:22.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace LarpManager\Entities;

use LarpManager\Entities\BaseCompetence;
use Doctrine\Common\Collections\ArrayCollection;


/**
 * LarpManager\Entities\Competence
 *
 * @Entity(repositoryClass="LarpManager\Repository\CompetenceRepository")
 */
class Competence extends BaseCompetence
{
	public function __toString()
	{
		return $this->getLabel();	
	}
	
	/**
	 * Fourni le label d'une compétence
	 */
	public function getLabel()
	{
		$label = $this->getCompetenceFamily()->getLabel();
		$label .= ' - ' . $this->getLevel()->getLabel();
		return $label;
	}
	
	public function getDescriptionRaw()
	{
		return html_entity_decode(strip_tags($this->getDescription()));
	}
	
	/**
	 * Fourni la compétence de niveau immédiatement supérieur appartenant à la même famille de compétence
	 */
	public function getNext()
	{
		$competenceFamily = $this->getCompetenceFamily();
		$levelIndex = $this->getLevel()->getIndex();
		
		$competences = $competenceFamily->getCompetences();
		$nextCompetences = new ArrayCollection();
		
		foreach ( $competences as $competence)
		{			
			if ( $competence->getLevel()->getIndex() > $levelIndex )
			{
				$nextCompetences->add($competence);
			}
		}
		
		$minimumIndex = null ;
		$competenceFirst = null;
		foreach ( $nextCompetences as $competence )
		{
			if ( $minimumIndex == null)
			{
				$competenceFirst = $competence;
				$minimumIndex = $competence->getLevel()->getIndex();
			}
			else if ( $competence->getLevel()->getIndex() < $minimumIndex )
			{
				$competenceFirst = $competence;
				$minimumIndex = $competence->getLevel()->getIndex();
			}
		}
		
		return $competenceFirst;
	}
	
}